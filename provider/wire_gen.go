// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package provider

import (
	"github.com/xh-polaris/schedule-core-api/biz/application/service"
	"github.com/xh-polaris/schedule-core-api/biz/infrastructure/config"
	"github.com/xh-polaris/schedule-core-api/biz/infrastructure/mapper/group"
	"github.com/xh-polaris/schedule-core-api/biz/infrastructure/mapper/schedule"
	"github.com/xh-polaris/schedule-core-api/biz/infrastructure/mapper/user"
)

// Injectors from wire.go:

func NewProvider() (*Provider, error) {
	configConfig, err := config.NewConfig()
	if err != nil {
		return nil, err
	}
	mongoMapper := user.NewMongoMapper(configConfig)
	groupMongoMapper := group.NewMongoMapper(configConfig)
	groupService := &service.GroupService{
		GroupMapper: groupMongoMapper,
	}
	userService := service.UserService{
		UserMapper:   mongoMapper,
		GroupService: groupService,
	}
	scheduleMongoMapper := schedule.NewMongoMapper(configConfig)
	scheduleService := service.ScheduleService{
		ScheduleMapper: scheduleMongoMapper,
		GroupService:   groupService,
	}
	serviceGroupService := service.GroupService{
		GroupMapper: groupMongoMapper,
	}
	providerProvider := &Provider{
		Config:          configConfig,
		UserService:     userService,
		ScheduleService: scheduleService,
		GroupService:    serviceGroupService,
	}
	return providerProvider, nil
}
